theta <- 0
t <- 0.0
i <- 1L;
x <- x0
y <- y0
V <- as.double(readline(prompt="Please enter a value for total velocity:"))
vx <- V * cos(((pi * theta) / 180.0))
vy <- V * sin(((pi * theta) / 180.0))
plot(x,y,xlim = c(0,50), ylim = c(0,10))
while (TRUE) {
points(x,y);
if (y < 0) break;
t <- t + h;
i <- i + 1L;
}
1
5
5
if (y < 0) break;
if (y < 0) break;
if (y < 0) break;
if (y < 0) break;
if (y < 0) break;
if (y < 0) break;
if (y < 0) break;
if (y < 0) break;
if (y < 0) break;
if (y < 0) break;
y0 <- 0.0
x0 <- 0.0
vy <- 0.0
vx <- 0.0
g <- 9.8
h <- 0.01
V <- 0.0
theta <- 0
t <- 0.0
i <- 1L;
x <- x0
y <- y0
V <- as.double(readline(prompt="Please enter a value for total velocity:"))
vx <- V * cos(((pi * theta) / 180.0))
vy <- V * sin(((pi * theta) / 180.0))
plot(x,y,xlim = c(0,50), ylim = c(0,10))
while (TRUE) {
y <- y + h * vy;
vy <- vy - h * g;
x <- x + h * vx;
points(x,y);
if (y < 0) break;
t <- t + h;
i <- i + 1L;
}
y0 <- 0.0
x0 <- 0.0
vy <- 0.0
vx <- 0.0
g <- 9.8
h <- 0.01
V <- 0.0
theta <- 0
t <- 0.0
i <- 1L;
x <- x0
y <- y0
V <- as.double(readline(prompt="Please enter a value for total velocity:"))
vx <- V * cos(((pi * theta) / 180.0))
vy <- V * sin(((pi * theta) / 180.0))
plot(x,y,xlim = c(0,50), ylim = c(0,10))
while (TRUE) {
y <- y + h * vy;
vy <- vy - h * g;
x <- x + h * vx;
points(x,y);
if (y < 0) {
break;
}
t <- t + h;
i <- i + 1L;
}
if (y < 0.0) {
break;
}
if (y < 0.0) {
break;
}
if (y < 0.0) {
break;
}
t <- t + h;
t <- t + h;
y0 <- 0.0
x0 <- 0.0
vy <- 0.0
vx <- 0.0
g <- 9.8
h <- 0.01
V <- 0.0
theta <- 0
t <- 0.0
i <- 1L;
x <- x0
y <- y0
V <- as.double(readline(prompt="Please enter a value for total velocity:"))
theta <- as.integer(readline(prompt="Please enter a value for the angle of the shot (theta):"))
vx <- V * cos(((pi * theta) / 180.0))
vy <- V * sin(((pi * theta) / 180.0))
plot(x,y,xlim = c(0,50), ylim = c(0,10))
while (TRUE) {
y <- y + h * vy;
vy <- vy - h * g;
x <- x + h * vx;
points(x,y);
if (y < 0.0) {
break;
}
t <- t + h;
i <- i + 1L;
}
y0 <- 0.0
x0 <- 0.0
vy <- 0.0
vx <- 0.0
g <- 9.8
h <- 0.01
V <- 0.0
theta <- 0
t <- 0.0
i <- 1L;
x <- x0
y <- y0
V <- as.double(readline(prompt="Please enter a value for total velocity:"))
vx <- V * cos(((pi * theta) / 180.0))
vy <- V * sin(((pi * theta) / 180.0))
plot(x,y,xlim = c(0,50), ylim = c(0,10))
while (TRUE) {
y <- y + h * vy;
vy <- vy - h * g;
x <- x + h * vx;
points(x,y);
if (y < 0.0) {
break;
}
t <- t + h;
i <- i + 1L;
Sys.sleep(0.01);
}
print(cat("total Time Aloft:",t));
print(cat("Total Distance Traveled:",x))
y0 <- 0.0
x0 <- 0.0
vy <- 0.0
vx <- 0.0
g <- 9.8
h <- 0.01
V <- 0.0
theta <- 0
t <- 0.0
i <- 1L;
x <- x0
y <- y0
V <- as.double(readline(prompt="Please enter a value for total velocity:"))
y0 <- 0.0
x0 <- 0.0
vy <- 0.0
vx <- 0.0
g <- 9.8
h <- 0.01
V <- 0.0
theta <- 0
t <- 0.0
i <- 1L;
x <- x0
y <- y0
V <- as.double(readline(prompt="Please enter a value for total velocity:"))
theta <- as.integer(readline(prompt="Please enter a value for the angle of the shot (theta):"))
vx <- V * cos(((pi * theta) / 180.0))
vy <- V * sin(((pi * theta) / 180.0))
plot(x,y,xlim = c(0,50), ylim = c(0,10))
while (TRUE) {
y <- y + h * vy;
vy <- vy - h * g;
x <- x + h * vx;
points(x,y);
if (y < 0.0) {
break;
}
t <- t + h;
i <- i + 1L;
Sys.sleep(0.01);
}
Sys.sleep(0.01);
while (TRUE) {
y <- y + h * vy;
vy <- vy - h * g;
x <- x + h * vx;
points(x,y);
if (y < 0.0) {
break;
}
t <- t + h;
i <- i + 1L;
Sys.sleep(0.01);
}
print(cat("total Time Aloft:",t));
print(cat("Total Distance Traveled:",x))
V <- as.double(readline(prompt="Please enter a value for total velocity:"))
theta <- as.integer(readline(prompt="Please enter a value for the angle of the shot (theta):"))
vx <- V * cos(((pi * theta) / 180.0))
vy <- V * sin(((pi * theta) / 180.0))
plot(x,y,xlim = c(0,50), ylim = c(0,10))
while (TRUE) {
y <- y + h * vy;
vy <- vy - h * g;
x <- x + h * vx;
points(x,y);
if (y < 0.0) {
break;
}
t <- t + h;
i <- i + 1L;
Sys.sleep(0.01);
}
print(cat("total Time Aloft:",t));
while (TRUE) {
y <- y + h * vy;
vy <- vy - h * g;
x <- x + h * vx;
points(x,y);
if (y < 0.0) {
break;
}
t <- t + h;
i <- i + 1L;
}
print(cat("total Time Aloft:",t));
print(cat("Total Distance Traveled:",x))
print(cat("total Time Aloft:",as.character(t)));
print(cat("Total Distance Traveled:",as.character(x)));
# variable Declaration
Draw_Cannonball <- function() {
y0 <- 0.0
x0 <- 0.0
vy <- 0.0
vx <- 0.0
g <- 9.8
h <- 0.01
V <- 0.0
theta <- 0
t <- 0.0
# Set the initial x and y (0,0);
x <- x0
y <- y0
# Ask the user for input.
print("Please enter the total velocity:");
V <- scan(n=1);
print("Please enter the angle of the shot:")
theta <- scan(n=1);
# Set the velocities
vx <- V * cos(((pi * theta) / 180.0))
vy <- V * sin(((pi * theta) / 180.0))
# plot the initial values
plot(x,y,xlim = c(0,50), ylim = c(0,10))
# loop through the simulation
while (TRUE) {
# calculate the height at the current time, the new velocity, and the new x at the current time.
y <- y + h * vy;
vy <- vy - h * g;
x <- x + h * vx;
# replot the points on the same visualization
points(x,y);
# set t to its new value.
t <- t + h
# if y is less than 0, break.
if (y < 0.0) {
break;
}
}
# print out the values for the time aloft and the total distance traveled.
print(cat("total Time Aloft:",as.character(t)));
print(cat("Total Distance Traveled:",as.character(x)));
}
Draw_Cannonball();
Draw_Cannonball();
Draw_Cannonball();
Draw_Cannonball();
# variable Declaration
Draw_Cannonball <- function() {
y0 <- 0.0
x0 <- 0.0
vy <- 0.0
vx <- 0.0
g <- 9.8
h <- 0.01
V <- 0.0
theta <- 0
t <- 0.0
# Set the initial x and y (0,0);
x <- x0
y <- y0
# Ask the user for input.
print("Please enter the total velocity:");
V <- scan(n=1);
print("Please enter the angle of the shot:")
theta <- scan(n=1);
# Set the velocities
vx <- V * cos(((pi * theta) / 180.0))
vy <- V * sin(((pi * theta) / 180.0))
# plot the initial values
plot(x,y,xlim = c(0,50), ylim = c(0,10))
# loop through the simulation
while (TRUE) {
# calculate the height at the current time, the new velocity, and the new x at the current time.
y <- y + h * vy;
vy <- vy - h * g;
x <- x + h * vx;
# replot the points on the same visualization
points(x,y);
# set t to its new value.
t <- t + h
# if y is less than 0, break.
if (y < 0.0) {
break;
}
}
# print out the values for the time aloft and the total distance traveled.
print(paste("total Time Aloft:",as.character(t)));
print(paste("Total Distance Traveled:",as.character(x)));
}
Draw_Cannonball();
Draw_Cannonball();
Sys.sleep(0.5);
Draw_Cannonball <- function() {
# variable Declaration
y0 <- 0.0
x0 <- 0.0
vy <- 0.0
vx <- 0.0
g <- 9.8
h <- 0.01
V <- 0.0
theta <- 0
t <- 0.0
# Set the initial x and y (0,0);
x <- x0
y <- y0
# Ask the user for input.
print("Please enter the total velocity:");
V <- scan(n=1);
print("Please enter the angle of the shot:")
theta <- scan(n=1);
# Set the velocities
vx <- V * cos(((pi * theta) / 180.0))
vy <- V * sin(((pi * theta) / 180.0))
# plot the initial values
plot(x,y,xlim = c(0,50), ylim = c(0,10))
# loop through the simulation
while (TRUE) {
# calculate the height at the current time, the new velocity, and the new x at the current time.
y <- y + h * vy;
vy <- vy - h * g;
x <- x + h * vx;
# replot the points on the same visualization
points(x,y);
# set t to its new value.
t <- t + h
# if y is less than 0, break.
if (y < 0.0) {
break;
}
Sys.sleep(0.5);
}
# print out the values for the time aloft and the total distance traveled.
print(paste("total Time Aloft:",as.character(t)));
print(paste("Total Distance Traveled:",as.character(x)));
}
Draw_Cannonball();
Draw_Cannonball <- function() {
# variable Declaration
y0 <- 0.0
x0 <- 0.0
vy <- 0.0
vx <- 0.0
g <- 9.8
h <- 0.01
V <- 0.0
theta <- 0
t <- 0.0
# Set the initial x and y (0,0);
x <- x0
y <- y0
# Ask the user for input.
print("Please enter the total velocity:");
V <- scan(n=1);
print("Please enter the angle of the shot:")
theta <- scan(n=1);
# Set the velocities
vx <- V * cos(((pi * theta) / 180.0))
vy <- V * sin(((pi * theta) / 180.0))
# plot the initial values
plot(x,y,xlim = c(0,50), ylim = c(0,10))
# loop through the simulation
while (TRUE) {
# calculate the height at the current time, the new velocity, and the new x at the current time.
y <- y + h * vy;
vy <- vy - h * g;
x <- x + h * vx;
# replot the points on the same visualization
points(x,y);
# set t to its new value.
t <- t + h
# if y is less than 0, break.
if (y < 0.0) {
break;
}
Sys.sleep(0.05);
}
# print out the values for the time aloft and the total distance traveled.
print(paste("total Time Aloft:",as.character(t)));
print(paste("Total Distance Traveled:",as.character(x)));
}
Draw_Cannonball();
Draw_Cannonball <- function() {
# variable Declaration
y0 <- 0.0
x0 <- 0.0
vy <- 0.0
vx <- 0.0
g <- 9.8
h <- 0.01
V <- 0.0
theta <- 0
t <- 0.0
# Set the initial x and y (0,0);
x <- x0
y <- y0
# Ask the user for input.
print("Please enter the total velocity:");
V <- scan(n=1);
print("Please enter the angle of the shot:")
theta <- scan(n=1);
# Set the velocities
vx <- V * cos(((pi * theta) / 180.0))
vy <- V * sin(((pi * theta) / 180.0))
# plot the initial values
plot(x,y,xlim = c(0,50), ylim = c(0,10))
# loop through the simulation
while (TRUE) {
# calculate the height at the current time, the new velocity, and the new x at the current time.
y <- y + h * vy;
vy <- vy - h * g;
x <- x + h * vx;
# replot the points on the same visualization
points(x,y);
# set t to its new value.
t <- t + h
# if y is less than 0, break.
if (y < 0.0) {
break;
}
Sys.sleep(0.01);
}
# print out the values for the time aloft and the total distance traveled.
print(paste("total Time Aloft:",as.character(t)));
print(paste("Total Distance Traveled:",as.character(x)));
}
Draw_Cannonball();
Draw_Cannonball <- function() {
# variable Declaration
y0 <- 0.0
x0 <- 0.0
vy <- 0.0
vx <- 0.0
g <- 9.8
h <- 0.01
V <- 0.0
theta <- 0
t <- 0.0
# Set the initial x and y (0,0);
x <- x0
y <- y0
# Ask the user for input.
print("Please enter the total velocity:");
V <- scan(n=1);
print("Please enter the angle of the shot:")
theta <- scan(n=1);
# Set the velocities
vx <- V * cos(((pi * theta) / 180.0))
vy <- V * sin(((pi * theta) / 180.0))
# plot the initial values
plot(x,y,xlim = c(0,50), ylim = c(0,10))
# loop through the simulation
while (TRUE) {
# calculate the height at the current time, the new velocity, and the new x at the current time.
y <- y + h * vy;
vy <- vy - h * g;
x <- x + h * vx;
# replot the points on the same visualization
points(x,y);
# set t to its new value.
t <- t + h
# if y is less than 0, break.
if (y < 0.0) {
break;
}
Sys.sleep(0.02);
}
# print out the values for the time aloft and the total distance traveled.
print(paste("total Time Aloft:",as.character(t)));
print(paste("Total Distance Traveled:",as.character(x)));
}
Draw_Cannonball();
