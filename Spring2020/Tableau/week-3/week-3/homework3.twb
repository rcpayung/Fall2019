<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='2010-2018 Population Estimates+ (va-counties-0)' inline='true' name='federated.0c729ht1f6m9z313yp7eg1e8fwtb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='va-counties-0' name='excel-direct.0s5t9wl0m0jwxt1dhuozn011j89e'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/rcpay/Documents/College/Spring 2020/CDS 301/week-3/week-3/hw/va-counties-0.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[2010]' />
            <value name='[2011]' />
            <value name='[2012]' />
            <value name='[2013]' />
            <value name='[2014]' />
            <value name='[2015]' />
            <value name='[2016]' />
            <value name='[2017]' />
            <value name='[2018]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[2010-2018 Population Estimates].[2010]' />
              <field name='[2010-2018 Population Estimates].[2011]' />
              <field name='[2010-2018 Population Estimates].[2012]' />
              <field name='[2010-2018 Population Estimates].[2013]' />
              <field name='[2010-2018 Population Estimates].[2014]' />
              <field name='[2010-2018 Population Estimates].[2015]' />
              <field name='[2010-2018 Population Estimates].[2016]' />
              <field name='[2010-2018 Population Estimates].[2017]' />
              <field name='[2010-2018 Population Estimates].[2018]' />
            </group>
          </groups>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[2010-2018 Population Estimates].[County]' />
                <expression op='[County Area].[Name]' />
              </expression>
            </clause>
            <relation connection='excel-direct.0s5t9wl0m0jwxt1dhuozn011j89e' name='2010-2018 Population Estimates' table='[&apos;2010-2018 Population Estimates$&apos;]' type='table'>
              <columns gridOrigin='A1:K134:no:A1:K134:0' header='yes' outcome='2'>
                <column datatype='string' name='FIPS Code' ordinal='0' />
                <column datatype='string' name='County' ordinal='1' />
                <column datatype='real' name='2010' ordinal='2' />
                <column datatype='real' name='2011' ordinal='3' />
                <column datatype='integer' name='2012' ordinal='4' />
                <column datatype='integer' name='2013' ordinal='5' />
                <column datatype='integer' name='2014' ordinal='6' />
                <column datatype='integer' name='2015' ordinal='7' />
                <column datatype='integer' name='2016' ordinal='8' />
                <column datatype='integer' name='2017' ordinal='9' />
                <column datatype='integer' name='2018' ordinal='10' />
              </columns>
            </relation>
            <relation connection='excel-direct.0s5t9wl0m0jwxt1dhuozn011j89e' name='County Area' table='[&apos;County Area$&apos;]' type='table'>
              <columns gridOrigin='A1:B134:no:A1:B134:0' header='yes' outcome='6'>
                <column datatype='string' name='Name' ordinal='0' />
                <column datatype='real' name='AreaSqMi' ordinal='1' />
              </columns>
            </relation>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FIPS Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FIPS Code]</local-name>
            <parent-name>[2010-2018 Population Estimates]</parent-name>
            <remote-alias>FIPS Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[2010-2018 Population Estimates]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2010-2018 Population Estimates]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K134:no:A1:K134:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[County Area]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AreaSqMi</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AreaSqMi]</local-name>
            <parent-name>[County Area]</parent-name>
            <remote-alias>AreaSqMi</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[County Area]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B134:no:A1:B134:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Area Sq Mi' datatype='real' name='[AreaSqMi]' role='measure' type='quantitative' />
      <column caption='Density' datatype='real' name='[Calculation_324822143120662528]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Pivot Field Values] / [AreaSqMi]' />
      </column>
      <column caption='Density Type' datatype='string' name='[Calculation_324822143120846849]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_324822143120662528] &lt; 200 THEN&#13;&#10;    &quot;RURAL&quot;&#13;&#10;ELSEIF [Calculation_324822143120662528] &gt;= 200 AND [Calculation_324822143120662528] &lt; 1000 THEN&#13;&#10;    &quot;MIXED RURAL&quot;&#13;&#10;ELSEIF [Calculation_324822143120662528] &gt;= 1000 AND [Calculation_324822143120662528] &lt; 7000 THEN&#13;&#10;    &quot;MIXED URBAN&quot;&#13;&#10;ELSE&#13;&#10;    &quot;UBRAN&quot;&#13;&#10;END' />
      </column>
      <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
      <column caption='Population' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_324822143120846849]' derivation='None' name='[none:Calculation_324822143120846849:nk]' pivot='key' type='nominal' />
      <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.367758' measure-ordering='alphabetic' measure-percentage='0.632242' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:County:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Augusta County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Covington City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Giles County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lee County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norton City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rockbridge County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Williamsburg City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accomack County&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carroll County&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fauquier County&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Highland County&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middlesex County&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prince William County&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Surry County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amelia County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chesapeake City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Franklin County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;King and Queen County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Newport News City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Richmond City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warren County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Botetourt County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Danville City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greene County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lunenburg County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Patrick County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Scott County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;York County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bath County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Craig County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gloucester County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lexington City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nottoway County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rockingham County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Winchester City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amherst County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chesterfield County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frederick County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;King George County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norfolk City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Richmond County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Campbell County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fairfax County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henrico County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mathews County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prince Edward County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Staunton City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albemarle County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charles City County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Floyd County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hopewell City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montgomery County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pulaski County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sussex County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buckingham County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Essex County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hanover County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manassas Park City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portsmouth City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spotsylvania County&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Appomattox County&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clarke County&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fredericksburg City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;King William County&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northampton County&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roanoke City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waynesboro City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bristol City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dickenson County&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greensville County&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lynchburg City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Petersburg City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shenandoah County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brunswick County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dinwiddie County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Halifax County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madison County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pittsylvania County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Smyth County&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buena Vista City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fairfax City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harrisonburg City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Martinsville City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Powhatan County&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stafford County&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Caroline County&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Falls Church City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry County&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mecklenburg County&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prince George County&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suffolk City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bedford County&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Culpeper County&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goochland County&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Loudoun County&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange County&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russell County&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wise County&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arlington County&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colonial Heights City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Galax City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lancaster County&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northumberland County&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roanoke County&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Westmoreland County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alexandria City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charlotte County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fluvanna County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Isle of Wight County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nelson County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Radford City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tazewell County&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Buchanan County&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Emporia City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hampton City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manassas City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poquoson City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Southampton County&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bland County&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cumberland County&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grayson County&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Louisa County&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Page County&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salem City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wythe County&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alleghany County&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charlottesville City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Franklin City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;James City County&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Kent County&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rappahannock County&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Virginia Beach City&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_324822143120846849:nk]' palette='color_blind_10_0' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;MIXED RURAL&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;UBRAN&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;MIXED URBAN&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;RURAL&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='FIPS Code' />
        <field-sort-custom-order field='County' />
        <field-sort-custom-order field='Name' />
        <field-sort-custom-order field='AreaSqMi' />
        <field-sort-custom-order field='Calculation_324822143120662528' />
        <field-sort-custom-order field='Calculation_324822143120846849' />
        <field-sort-custom-order field='Pivot Field Names' />
        <field-sort-custom-order field='Pivot Field Values' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Counties in VA by Population Density (Diverging Color)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2010-2018 Population Estimates+ (va-counties-0)' name='federated.0c729ht1f6m9z313yp7eg1e8fwtb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0c729ht1f6m9z313yp7eg1e8fwtb'>
            <column caption='Area Sq Mi' datatype='real' name='[AreaSqMi]' role='measure' type='quantitative' />
            <column caption='Density' datatype='real' name='[Calculation_324822143120662528]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Pivot Field Values] / [AreaSqMi]' />
            </column>
            <column aggregation='None' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Year' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column caption='Population' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_324822143120662528]' derivation='Sum' name='[sum:Calculation_324822143120662528:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c729ht1f6m9z313yp7eg1e8fwtb].[none:Pivot Field Names:nk]'>
            <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;2018&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0c729ht1f6m9z313yp7eg1e8fwtb].[none:Pivot Field Names:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0c729ht1f6m9z313yp7eg1e8fwtb].[Longitude (generated)]' field-type='quantitative' max='-8144840.0168113094' min='-9386131.7639211845' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0c729ht1f6m9z313yp7eg1e8fwtb].[Latitude (generated)]' field-type='quantitative' max='4943042.6129288096' min='4233733.0114431307' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='1000.0' field='[federated.0c729ht1f6m9z313yp7eg1e8fwtb].[sum:Calculation_324822143120662528:qk]' palette='sunrise_sunset_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0c729ht1f6m9z313yp7eg1e8fwtb].[sum:Calculation_324822143120662528:qk]' />
              <lod column='[federated.0c729ht1f6m9z313yp7eg1e8fwtb].[none:County:nk]' />
              <tooltip column='[federated.0c729ht1f6m9z313yp7eg1e8fwtb].[sum:Pivot Field Values:qk]' />
              <geometry column='[federated.0c729ht1f6m9z313yp7eg1e8fwtb].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c729ht1f6m9z313yp7eg1e8fwtb].[Latitude (generated)]</rows>
        <cols>[federated.0c729ht1f6m9z313yp7eg1e8fwtb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{839C6710-ADCB-4514-B8AA-A10C53E9C1FB}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0c729ht1f6m9z313yp7eg1e8fwtb].[sum:Calculation_324822143120662528:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c729ht1f6m9z313yp7eg1e8fwtb].[attr:County:nk]</field>
            <field>[federated.0c729ht1f6m9z313yp7eg1e8fwtb].[none:Calculation_324822143120846849:nk]</field>
            <field>[federated.0c729ht1f6m9z313yp7eg1e8fwtb].[none:County:nk]</field>
            <field>[federated.0c729ht1f6m9z313yp7eg1e8fwtb].[none:Pivot Field Names:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{29FAA8CA-F43E-4B56-8979-B00080E89B23}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      Ac4CpAqp8hInAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
