}
}
q <- 0
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (i %in% j) {
q <- q + 1;
}
}
vec <- c(vec, q);
}
# load the transaction data.
transactions <- read.csv(file='transactiondatabase.csv');
# select just the itemsets for mining.
itemsets <- transactions %>%
select(items);
# split itemsets into individual items for the apriori algorithm. Only consider distinct (letters in this case) items.
items <- data.frame(item = as.character())
for (i in itemsets$items) {
curitemset <- as.data.frame(strsplit(i,""), col.names = c('item'));
items <- rbind(curitemset, items);
}
frequency <- items %>% group_by(item) %>% count(item);
frequency <- frequency %>% summarise(count = n,support = (n / nrow(transactions)))
# sort items lexicographically and select distinct values
items <- items %>% distinct(item)
items <- arrange(items, as.character(item))
frequency <- arrange(frequency, as.character(item))
ntransactions = nrow(transactions);
min_support <- .30;
min_records <- ceiling(min_support * ntransactions);
# since support is 30%, we want the minimum number of records to be a set number greater than 30%. In this case the minimum records needed is 4.
k = nrow(items);
# number of items for size k-itemsets.
# since we know that the min_support is 0.30, we need to prune the initial data set.
frequency <- frequency %>% filter(support > 0.30);
print(frequency)
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (i %in% j) {
q <- q + 1;
}
}
vec <- c(vec, q);
}
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (i %in% j) {
q <- q + 1;
}
}
vec <- c(vec, q);
}
vec
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (i %in% j) {
q <- q + 1;
}
}
vec <- c(vec, q);
}
vec
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (i %in% j) {
q <- q + 1;
}
}
vec <- c(vec, q);
}
vec
View(frequencyDoubleCandidates)
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (i %in% j) {
q <- q + 1;
print(q);
}
}
}
vec
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (i %in% j) {
q <- q + 1;
print(q);
}
}
}
vec
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (i %in% j) {
print(TRUE);
}
}
}
vec
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (i %in% j) {
print(TRUE);
}
}
}
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (i %in% j) {
q = q + 1;
}
}
}
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (i %in% j) {
q = q + 1;
}
}
vec <- c(vec, q);
}
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (i %in% j) {
q = q + 1;
}
vec <- c(vec, q);
}
}
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (i %in% j) {
q = q + 1;
}
}
vec <- c(vec, q);
}
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (str_detect(j,i,negate=FALSE)) {
q = q + 1;
}
}
}
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (str_detect(j,i,negate=FALSE)) {
q = q + 1;
}
}
vec <- c(vec,q);
q = 0;
}
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (str_detect(j,i,negate=FALSE)) {
q = q + 1;
}
}
vec <- c(vec,q);
q = 0;
}
frequencyDoubleCandidates$c = vec;
View(frequencyDoubleCandidates)
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (str_detect(j,i,negate=FALSE)) {
q = q + 1;
}
}
vec <- c(vec,q);
q = 0;
}
frequencyDoubleCandidates$c = vec;
frequencyDoubleCandidates <- frequencyDoubleCandidates %>% group_by(item) %>% count(item);
frequencyDoubleCandidates <- frequencyDoubleCandidates %>% summarise(count = c,support = (n / nrow(transactions)))
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (str_detect(j,i,negate=FALSE)) {
q = q + 1;
}
}
vec <- c(vec,q);
q = 0;
}
frequencyDoubleCandidates$c = vec;
frequencyDoubleCandidates <- frequencyDoubleCandidates %>% summarise(c = c,support = (n / nrow(transactions)))
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (str_detect(j,i,negate=FALSE)) {
q = q + 1;
}
}
vec <- c(vec,q);
q = 0;
}
frequencyDoubleCandidates$c = vec;
frequencyDoubleCandidates <- frequencyDoubleCandidates %>% summarise(count = c,support = (n / nrow(transactions)))
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (str_detect(j,i,negate=FALSE)) {
q = q + 1;
}
}
vec <- c(vec,q);
q = 0;
}
frequencyDoubleCandidates$c = vec;
frequencyDoubleCandidates <- frequencyDoubleCandidates %>% summarise(support = (n / nrow(transactions)))
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (str_detect(j,i,negate=FALSE)) {
q = q + 1;
}
}
vec <- c(vec,q);
q = 0;
}
frequencyDoubleCandidates$c = vec;
frequencyDoubleCandidates <- frequencyDoubleCandidates %>% summarise(support = (c / nrow(transactions)))
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (str_detect(j,i,negate=FALSE)) {
q = q + 1;
}
}
vec <- c(vec,q);
q = 0;
}
frequencyDoubleCandidates$c = vec;
frequencyDoubleCandidates <- frequencyDoubleCandidates %>% mutate(support = (c / nrow(transactions)))
View(frequencyDoubleCandidates)
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (str_detect(j,i,negate=FALSE)) {
q = q + 1;
}
}
vec <- c(vec,q);
q = 0;
}
frequencyDoubleCandidates$c = vec;
frequencyDoubleCandidates <- frequencyDoubleCandidates %>% mutate(support = (c / nrow(transactions)))
# prune data set.
frequencyDouble <- frequencyDoubleCandidates %>% filter(support > min_support);
print(frequencyDouble);
# since we know that the min_support is 0.30, we need to prune the initial data set.
frequency <- frequency %>% filter(support > 0.30);
print(frequency)
frequencyDoubleCandidates = data.frame(item = as.character(), count = as.numeric());
for (i in frequency$item) {
for (j in frequency$item) {
if (i != j && !(paste(j,i,sep="") %in% frequencyDoubleCandidates$item)) {
ite <- data.frame(item = paste(i,j,sep=""), c = 0);
frequencyDoubleCandidates <- rbind(frequencyDoubleCandidates,ite);
}
}
}
q <- 0;
vec <- c();
for (i in frequencyDoubleCandidates$item) {
for (j in transactions$items) {
if (str_detect(j,i,negate=FALSE)) {
q = q + 1;
}
}
vec <- c(vec,q);
q = 0;
}
frequencyDoubleCandidates$c = vec;
frequencyDoubleCandidates <- frequencyDoubleCandidates %>% mutate(support = (c / nrow(transactions)))
# prune data set.
frequencyDouble <- frequencyDoubleCandidates %>% filter(support > min_support);
print(frequencyDouble);
